{"version":3,"file":"game.component.js","sourceRoot":"","sources":["game.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Inject, OnInit, OnDestroy } from '@angular/core';\n\ndeclare var Phaser: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-game',\n  templateUrl: 'game.component.html',\n  styleUrls: ['game.component.css']\n})\n\nexport class GameComponent implements OnInit, OnDestroy {\n  currentState;\n  game;\n  score = 0;\n  teamScore = 0;\n  ws;\n\n  constructor() {\n    this.ws = new WebSocket('ws://localhost:8081/game');\n    this.currentState = 'title';\n\n    this.ws.onopen = event => {\n      console.log(event);\n    };\n\n    this.ws.onclose = event => {\n      console.log('web socket closed', event);\n    };\n\n    this.ws.onmessage = event => {\n      let data = JSON.parse(event.data);\n\n      if (data.type === 'state') {\n        this.currentState = data.state;\n\n        switch (this.currentState) {\n          case 'title':\n            this.game.state.start('Title');\n            break;\n\n          case 'play':\n            this.game.state.start('Play');\n            break;\n\n          case 'pause':\n            this.game.paused = !this.game.paused;\n            break;\n\n          case 'game-over':\n            this.game.state.start('GameOver');\n            break;\n        }\n      }\n\n      if (data.type === 'team-score') {\n        this.teamScore = data.score;\n      }\n\n      if (data.type === 'configuration') {\n        localStorage.setItem('player-id', data.playerId);\n\n        if (this.game.stage && data.configuration.backgroundColor) {\n          this.game.stage.backgroundColor = data.configuration.backgroundColor;\n        }\n      }\n    };\n  }\n\n  ngOnInit() {\n    this.game = new Phaser.Game(window.innerWidth, window.innerHeight - 56, Phaser.AUTO, 'game', null, true);\n\n    const fireRate = 100;\n    const numBalloons = 4;\n    let balloons = null;\n    let explosions = null;\n    let nextFire = 0;\n\n    let TitleState = {\n      preload: () => {\n        // this.game.load.image('btn-start', './app/game/assets/btn-start.png');\n      },\n      create: () => {\n        // let btnStart = this.game.add.sprite(Math.floor(this.game.world.width / 2), Math.floor(this.game.world.height / 2), 'btn-start');\n        // btnStart.anchor.setTo(0.5);\n        // btnStart.scale.setTo(0.5);\n        // btnStart.inputEnabled = true;\n        // btnStart.events.onInputDown.add(() => {\n        //     this.game.state.start('Play');\n        // });\n      }\n    };\n\n    let PlayState = {\n      preload: () => {\n        this.game.load.atlas('balloons', './app/+game/assets/balloons.png', './app/+game/assets/balloons.json');\n        this.game.load.spritesheet('explosion', './app/+game/assets/explosion.png', 128, 128, 10);\n      },\n      create: () => {\n        this.game.physics.arcade.gravity.y = 300;\n\n        balloons = this.game.add.group();\n        balloons.enableBody = true;\n        balloons.physicsBodyType = Phaser.Physics.ARCADE;\n        for (var i = 0; i < numBalloons; i += 1) {\n          balloons.create(0, 0, 'balloons', i, false);\n        }\n\n        balloons.setAll('checkWorldBounds', true);\n        balloons.setAll('outOfBoundsKill', true);\n\n        balloons.children.forEach(balloon => {\n          balloon.scale.setTo(0.3);\n          balloon.anchor.setTo(0.5);\n          balloon.inputEnabled = true;\n          balloon.events.onInputDown.add(() => {\n            balloon.kill();\n\n            this.score += 1;\n\n            var explosion = explosions.getFirstExists(false);\n            explosion.reset(balloon.body.x, balloon.body.y);\n            explosion.play('explode', 30, false, true);\n\n            this.ws.send(JSON.stringify({\n              type: 'score'\n            }));\n          });\n        });\n\n        explosions = this.game.add.group();\n        explosions.createMultiple(4, 'explosion');\n        explosions.children.forEach(explosion => {\n          explosion.anchor.set(-0.125);\n          explosion.animations.add('explode');\n        });\n\n        PlayState.throwObject();\n      },\n      update: () => {\n        PlayState.throwObject();\n      },\n      throwObject: () => {\n        if (this.game.time.now > nextFire && balloons.countDead() > 0) {\n          if (balloons.countDead() > 0) {\n            nextFire = this.game.time.now + fireRate;\n            PlayState.throwGoodObject();\n          }\n        }\n      },\n      throwGoodObject: () => {\n        var obj = balloons.getFirstDead();\n        obj.reset(this.game.world.centerX + this.game.rnd.integerInRange(-75, 75), this.game.world.height);\n        this.game.physics.arcade.moveToXY(obj, this.game.world.centerX + this.game.rnd.integerInRange(-50, 50), this.game.world.centerY, (this.game.world.height + 56 - 568) * 0.5 + 450);\n      }\n    };\n\n    let GameOverState = {\n      create: () => {\n        console.log('GameOverState');\n      }\n    };\n\n    this.game.state.add('Title', TitleState);\n    this.game.state.add('Play', PlayState);\n    this.game.state.add('GameOver', GameOverState);\n    this.game.state.start('Title');\n  }\n\n  ngOnDestroy() {\n    this.game.destroy();\n  }\n\n  nameLoaded(event) {\n    event.target.classList.add('loaded');\n    event.target.classList.remove('loading');\n  }\n}\n"]}