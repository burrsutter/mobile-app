{"version":3,"file":"selfie.component.js","sourceRoot":"","sources":["selfie.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Http, HTTP_PROVIDERS, Headers, RequestOptions } from '@angular/http';\n\ndeclare var loadImage: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-selfie',\n  host: {'class': 'dark-bg'},\n  templateUrl: 'selfie.component.html',\n  styleUrls: ['selfie.component.css'],\n  providers: [ HTTP_PROVIDERS ]\n})\n\nexport class SelfieComponent implements OnInit {\n  canvas;\n  uploadBtn;\n  canUpload = false;\n\n  constructor(private http: Http) {}\n\n  ngOnInit() {\n    this.canvas = document.getElementById('canvas');\n    this.uploadBtn = document.querySelector('.upload');\n    this.uploadBtn.style.display = 'none';\n  }\n\n  onChange(event) {\n    if (event.target.files.length === 1 && event.target.files[0].type.indexOf('image/') === 0) {\n      let file = event.target.files[0];\n      let options = {\n        maxWidth: 300,\n        maxHeight: 300,\n        crop: true,\n        downsamplingRatio: 0.05\n      };\n\n      loadImage.parseMetaData(file, data => {\n        if (data.exif) {\n          options['orientation'] = data.exif.get('Orientation');\n        }\n\n        loadImage(file, data => {\n          console.log(data);\n          this.canvas.parentNode.replaceChild(data, this.canvas);\n          this.canvas = data;\n          this.canUpload = true;\n\n          this.uploadBtn.style.display = 'block';\n        }, options);\n      });\n    }\n  }\n\n  upload() {\n    let image = this.canvas.toDataURL('image/jpeg', 0.1);\n    let body = JSON.stringify({\n      image: image ,\n      id: localStorage.getItem('id') || null\n    });\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    let url = 'http://localhost:8081/upload';\n\n    this.http.post(url, body, options)\n      .toPromise()\n      .then(res => {\n        let data = res.json();\n        localStorage.setItem('id', data.id);\n      });\n  }\n}\n"]}